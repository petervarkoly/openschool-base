# Copyright (c) 2012 Peter Varkoly NÃ¼rnberg, Germany.  All rights reserved.
#
# See slapd.conf(5) for details on configuration options.
# This file should NOT be world readable.
#
include		/etc/openldap/schema/core.schema
include		/etc/openldap/schema/cosine.schema
include		/etc/openldap/schema/inetorgperson.schema
include		/etc/openldap/schema/rfc2307bis.schema
# Remove it if do not using SUSE
include         /etc/openldap/schema/yast.schema
include		/etc/openldap/schema/dnszone.schema
include		/etc/openldap/schema/dhcp.schema
include		/etc/openldap/schema/samba3.schema
include		/etc/openldap/schema/openxchange.schema
include		/etc/openldap/schema/openschool-server.schema
include		/etc/openldap/schema/phpgwaccount.schema
include		/etc/openldap/schema/phpgwcontact.schema
include		/etc/openldap/schema/suse-mailserver.schema
# Define global ACLs to disable default read access.

# Do not enable referrals until AFTER you have a working directory
# service AND an understanding of referrals.
#referral	ldap://root.openldap.org

pidfile		/var/run/slapd/slapd.pid
argsfile	/var/run/slapd/slapd.args

# Load dynamic backend modules:
modulepath	/usr/lib/openldap/modules
# moduleload	back_ldap.la
# moduleload	back_meta.la
# moduleload	back_monitor.la
# moduleload	back_perl.la

# Sample security restrictions
#	Require integrity protection (prevent hijacking)
#	Require 112-bit (3DES or better) encryption for updates
#	Require 63-bit encryption for simple bind
# security ssf=1 update_ssf=112 simple_bind=64

# Sample access control policy:
#       Root DSE: allow anyone to read it
#       Subschema (sub)entry DSE: allow anyone to read it
#       Other DSEs:
#               Allow self write access to user password
#               Allow anonymous users to authenticate
#               Allow read access to everything else
#       Directives needed to implement policy:
## Yast2 samba hack ACL
## allow the "ldap admin dn" access, but deny everyone else
access to attrs=SambaLMPassword,SambaNTPassword
    by dn="cn=Administrator,#LDAPBASE#" write
    by * none
## Yast2 samba hack ACL done
access to dn.base=""
        by * read

access to dn.base="cn=Subschema"
        by * read

access to attrs=userPassword,userPKCS12,authData
        by self write
        by * auth

access to attrs=shadowLastChange,importSortInDirectory,sambaPwdMustChange
        by self write
        by * read

access to *
        by * read

# if no access controls are present, the default policy
# allows anyone and everyone to read anything but restricts
# updates to rootdn.  (e.g., "access to * by * read")
#
# rootdn can always read and write EVERYTHING!

#######################################################################
# bdb database definitions
#######################################################################

loglevel 4
TLSCertificateFile /etc/ssl/servercerts/servercert.pem
TLSCACertificatePath /etc/ssl/certs/
TLSCertificateKeyFile /etc/ssl/servercerts/serverkey.pem
database bdb
suffix "#LDAPBASE#"
rootdn "cn=Administrator,#LDAPBASE#"
rootpw "CRYPTEDPW"
directory /var/lib/ldap
checkpoint 1024 5
cachesize 10000
index objectClass,uidNumber,gidNumber eq
index member,mail eq,pres
index cn,displayname,uid,sn,givenname sub,eq,pres
index sambaSID eq
index sambaPrimaryGroupSID eq
index sambaDomainName eq
index internetDisabled,loginDisabled,mailEnabled eq
index lnetMailAccess,loginDestination eq,sub
index phpgwAccountType,phpgwAccountStatus,OXGroupID eq
index memberUid eq
index role,serviceAccesControl sub
index configurationKey eq
index configurationValue eq,sub
index SuSEMailClient,SUSEMailAcceptAddress,zoneName eq
index SuSEMailDomainMasquerading,relativeDomainName,suseMailDomainType eq
index suseTLSPerSitePeer,SuSEMailTransportDestination eq
# We have mostly very big searches
sizelimit unlimited

# Sysadmins may change anithing
access to dn.subtree="#LDAPBASE#"
        by group="cn=sysadmins,ou=group,#LDAPBASE#" write
        by * read

# The birthday may not be read by anyone :-)
access to attrs=birthday
   by self read break
   by * none

# Teacher may change some attributes for students
access to filter="(&(role=students)(objectclass=schoolAccount))"
  by group="cn=teachers,ou=group,#LDAPBASE#" write
  by self read break
  by * read break

# Teacher may create groups
access to dn.subtree="ou=group,#LDAPBASE#"
  by group="cn=teachers,ou=group,#LDAPBASE#" write
  by * read break

# If needed only the creator may modify the created group
access to filter="(&(objectClass=SchoolGroup)(writerdn=*))"
  by dnattr=writerdn write
  by * read

# If needed only the creator may modify the created group
access to filter="(&(objectClass=schoolAccount)(writerdn=*))"
  by dnattr=writerdn write
  by * read

# Addressbook Setings
access to dn="ou=addr,uid=(.*),ou=people,#LDAPBASE#" attrs=uid,objectClass,entry filter=(objectClass=OXUserObject)
         by self write
         by dn="uid=$1,ou=people,#LDAPBASE#" write
         by * none

access to dn.subtree="o=AddressBook,#LDAPBASE#" 
	by group="cn=sysadmins,ou=group,#LDAPBASE#" write
        by users read
        by * none

# handle write access to the personal data (system address book) 
# - first look at the OpenLDAPaci attribute
# - if that doesn't exist or the user-dn is not in the subject clause,
#   give write access to the owner of the entry and read acces to anyone else
access to dn.regex="uid=[^,]+,ou=people,#LDAPBASE#" attrs=c,cn,telephoneNumber,facsimileTelephoneNumber,pager,title,givenname,sn,l,description,mail,street,postalCode,st,homePhone,ou,initials,mobile,labeledURI,preferredLanguage,entry,objectclass,birthday
  by aci write break
  by self write
  by users read
  by peername.ip=127.0.0.1 read
  by peername.ip=#NETWORK#%#NETMASK# read
  by * none

# if the above break statement is reached add read access for everyone
access to dn.regex="uid=[^,]+,ou=people,#LDAPBASE#" attrs=c,cn,telephoneNumber,facsimileTelephoneNumber,pager,title,givenname,sn,l,description,mail,street,postalCode,st,homePhone,ou,initials,mobile,labeledURI,preferredLanguage,entry,objectclass
  by users +rsc
  by peername.ip=127.0.0.1 read
  by peername.ip=#NETWORK#%#NETMASK# read
  by * none

access to dn.regex="uid=[^,]+,ou=people,#LDAPBASE#" attrs=OXTaskDays,OXAppointmentDays
  by self write
  by peername.ip=127.0.0.1 read
  by peername.ip=#NETWORK#%#NETMASK# read
  by * none

